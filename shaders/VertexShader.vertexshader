#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexColor;
layout(location = 2) in vec2 vertexUV;
layout(location = 3) in vec3 vertexNormal;

out vec3 fragmentColor;
out vec2 UV;
out vec3 Normal;
out vec3 FragPos;

uniform mat4 MVP;
uniform mat4 model;

void main(){
    gl_Position = MVP * vec4(vertexPosition_modelspace, 1.0);
    fragmentColor = vertexColor;
    UV = vertexUV;
    // inverseはscaleを単位ベクトルに変換する
    // transposeは反転した回転を元に戻す
    mat3 normalMatrix = transpose(inverse(mat3(model)));
    Normal = normalize(normalMatrix * vertexNormal);
    FragPos = vec3(model * vec4(vertexPosition_modelspace, 1.0));
}
